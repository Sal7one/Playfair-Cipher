const alphabet=["a","b","c","d","e","f","g","h","i","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z",];let plainText="hello",cipherText="",key="Ahmed",grid=null,placeHolderLetter="x",gridElm=document.querySelector("#grid"),keyElm=document.querySelector("#key"),plainTextElm=document.querySelector("#plain"),cipherTextElm=document.querySelector("#cipher"),playfairkeyInput=document.querySelector("#playfairkey"),chiperPlainInput=document.querySelector("#chiperPlain"),encButton=document.querySelector("#encrypt"),decButton=document.querySelector("#decrypt"),globalPlainArray=[],globalCipherArray=[];function generateGrid(e){let r=new Set;for(let l=0;l<e.length;l++)r.add(e[l].toLowerCase());let t=Array.from(new Set([...r,...alphabet])),n=[];for(;t.length;)n.push(t.splice(0,5));grid=n;let a="";for(i=0;i<n.length;i++)a+=buildLetterRow(n[i]);gridElm.innerHTML=a}function buildLetterRow(e){let r="";return e.forEach(e=>{r+=`<div class="letter" id="${e}">${e.toUpperCase()}</div>`}),`<div class="row">
   ${r}
  </div>`}function getChuncksOfString(e){let r="";for(let l=0;l<e.length;l++){let t=e[l];if(l+1!=e.length){let n=e[l+1];t==n?r+=t+placeHolderLetter:(r+=t+n,l++)}else r+=t}let a=[];for(var c=0,o=r.length;c<o;c+=2)a.push(r.substring(c,c+2));let p=a[a.length-1];return 1==p.length&&(a[a.length-1]=p+placeHolderLetter),a}function encrypt(e,r){let l=getChuncksOfString(e.replaceAll(" ","").toLowerCase()),t="";return l.forEach(e=>{let l=e[0],n=e[1],a=-1,c=-1,o=-1,p=-1;for(let u=0;u<r.length;u++){let s=r[u];-1!=s.indexOf(l)&&(a=u,c=s.indexOf(l)),-1!=s.indexOf(n)&&(o=u,p=s.indexOf(n))}if(a==o)5==++c&&(c=0),5==++p&&(p=0);else if(c==p)5==++a&&(a=0),5==++o&&(o=0);else{let y=c;c=p,p=y}t+=r[a][c],t+=r[o][p]}),t}function rebuildUI(){key=playfairkeyInput.value.replaceAll(" ","").toLowerCase();let e=chiperPlainInput.value.replaceAll(" ","").toLowerCase(),r=document.querySelector("#typeOfText");generateGrid(key),""!=e&&(keyElm.innerHTML=`Key: <span class="actualvalue"> ${playfairkeyInput.value} </span>`,encButton.checked?(r.innerHTML="Plain Text",plainTextElm.innerHTML=`Plain Text: <span class="actualvalue"> ${chiperPlainInput.value} </span>`,document.querySelector("#plainArray").innerHTML=`<span class="actualvalue"> ${"[   "+getChuncksOfString(e).join(",   ")+" ]"} </span>`,cipherText=encrypt(e,grid),globalPlainArray=getChuncksOfString(e),globalCipherArray=getChuncksOfString(cipherText),cipherTextElm.innerHTML=`Cipher Text: <span class="actualvalue"> ${cipherText.toUpperCase()} </span>`,document.querySelector("#cipherArray").innerHTML=`<span class="actualvalue"> ${"[   "+getChuncksOfString(cipherText).join(",   ")+" ]"} </span>`):decButton.checked&&(r.innerHTML="Cipher Text",plainTextElm.innerHTML=`Cipher Text: <span class="actualvalue"> ${chiperPlainInput.value} </span>`,document.querySelector("#plainArray").innerHTML="",cipherText=decrypt(e,grid),cipherTextElm.innerHTML=`Plain Text: <span class="actualvalue"> ${cipherText.toUpperCase()} </span>`,document.querySelector("#cipherArray").innerHTML="",globalPlainArray=getChuncksOfString(cipherText),globalCipherArray=getChuncksOfString(e)),document.querySelector(".playdiv").style.display="block")}function decrypt(e,r){let l=e.replaceAll(" ","").toLowerCase(),t=[];for(var n=0,a=l.length;n<a;n+=2)t.push(l.substring(n,n+2));let c="";return t.forEach(e=>{let l=e[0],t=e[1],n=0,a=0,o=0,p=0;for(let u=0;u<r.length;u++){let s=r[u];-1!=s.indexOf(l)&&(n=u,a=s.indexOf(l)),-1!=s.indexOf(t)&&(o=u,p=s.indexOf(t))}if(n==o)-1==--a&&(a=4),-1==--p&&(p=4);else if(a==p)-1==--n&&(n=4),-1==--o&&(o=4);else{let y=a;a=p,p=y}c+=r[n][a],c+=r[o][p]}),c}function playRealTime(){(0==globalPlainArray.length||0==globalCipherArray.length)&&alert("You need to Encrypt or Decrypt first");let e=document.querySelectorAll(".letter"),r=1e3;for(let l=0;l<globalPlainArray.length;l++)setTimeout(()=>{let r=globalCipherArray[l];document.querySelector(`#${r[0]}`).style.backgroundColor="red",document.querySelector(`#${r[1]}`).style.backgroundColor="red",setTimeout(()=>{let r=globalPlainArray[l];document.querySelector(`#${r[0]}`).style.backgroundColor="gold",document.querySelector(`#${r[1]}`).style.backgroundColor="gold",setTimeout(()=>{e.forEach(e=>{e.style.backgroundColor="teal"})},800)},700)},r),r+=2800}playfairkeyInput.addEventListener("input",rebuildUI),chiperPlainInput.addEventListener("input",rebuildUI),encButton.addEventListener("input",rebuildUI),decButton.addEventListener("input",rebuildUI),document.querySelector("#playbutton").addEventListener("click",playRealTime),rebuildUI();